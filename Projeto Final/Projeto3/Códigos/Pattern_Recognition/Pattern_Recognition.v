/*------------------------------------------------------------------------------
 * This code was generated by Spiral Multiplier Block Generator, www.spiral.net
 * Copyright (c) 2006, Carnegie Mellon University
 * All rights reserved.
 * The code is distributed under a BSD style license
 * (see http://www.opensource.org/licenses/bsd-license.php)
 *------------------------------------------------------------------------------ */

module Pattern_Recognition (
    X,
    Y1,
    Y2,
    Y3,
    Y4,
    Y5,
    Y6,
    Y7,
    Y8,
    Y9,
    Y10,
    Y11,
    Y12
);

  // Port mode declarations:
  input  signed  [31:0] X;
  output signed  [31:0]
    Y1,
    Y2,
    Y3,
    Y4,
    Y5,
    Y6,
    Y7,
    Y8,
    Y9,
    Y10,
    Y11,
    Y12;

  wire [31:0] Y [0:11];

  assign Y1 = Y[0];
  assign Y2 = Y[1];
  assign Y3 = Y[2];
  assign Y4 = Y[3];
  assign Y5 = Y[4];
  assign Y6 = Y[5];
  assign Y7 = Y[6];
  assign Y8 = Y[7];
  assign Y9 = Y[8];
  assign Y10 = Y[9];
  assign Y11 = Y[10];
  assign Y12 = Y[11];

  //Multipliers:

  wire signed [31:0]
    w1,
    w1024,
    w1025,
    w128,
    w897,
    w16400,
    w15503,
    w524288,
    w539791,
    w898,
    w449,
    w28736,
    w29185,
    w4100,
    w3075,
    w1574400,
    w1577475,
    w992192,
    w585283,
    w8192,
    w5117,
    w997309,
    w8200,
    w11275,
    w360800,
    w349525,
    w131072,
    w134147,
    w536588,
    w1040887,
    w16,
    w15,
    w2050,
    w2065,
    w132160,
    w266307,
    w30,
    w29,
    w475136,
    w473071,
    w7424,
    w10499,
    w83992,
    w83977,
    w4130,
    w4131,
    w167984,
    w163853,
    w7680,
    w7665,
    w1962240,
    w384765,
    w196800,
    w194735,
    w389470,
    w378971,
    w532614,
    w933920,
    w655412,
    w699050,
    w757942,
    w769530,
    w946142;

  assign w1 = X;
  assign w1024 = w1 << 10;
  assign w1025 = w1 + w1024;
  assign w128 = w1 << 7;
  assign w897 = w1025 - w128;
  assign w16400 = w1025 << 4;
  assign w15503 = w16400 - w897;
  assign w524288 = w1 << 19;
  assign w539791 = w15503 + w524288;
  assign w898 = w1 + w897;
  assign w449 = w898 >> 1;
  assign w28736 = w449 << 6;
  assign w29185 = w449 + w28736;
  assign w4100 = w1025 << 2;
  assign w3075 = w4100 - w1025;
  assign w1574400 = w3075 << 9;
  assign w1577475 = w3075 + w1574400;
  assign w992192 = w15503 << 6;
  assign w585283 = w1577475 - w992192;
  assign w8192 = w1 << 13;
  assign w5117 = w8192 - w3075;
  assign w997309 = w5117 + w992192;
  assign w8200 = w1025 << 3;
  assign w11275 = w3075 + w8200;
  assign w360800 = w11275 << 5;
  assign w349525 = w360800 - w11275;
  assign w131072 = w1 << 17;
  assign w134147 = w3075 + w131072;
  assign w536588 = w134147 << 2;
  assign w1040887 = w1577475 - w536588;
  assign w16 = w1 << 4;
  assign w15 = w16 - w1;
  assign w2050 = w1025 << 1;
  assign w2065 = w15 + w2050;
  assign w132160 = w2065 << 6;
  assign w266307 = w134147 + w132160;
  assign w30 = w15 << 1;
  assign w29 = w30 - w1;
  assign w475136 = w29 << 14;
  assign w473071 = w475136 - w2065;
  assign w7424 = w29 << 8;
  assign w10499 = w3075 + w7424;
  assign w83992 = w10499 << 3;
  assign w83977 = w83992 - w15;
  assign w4130 = w2065 << 1;
  assign w4131 = w1 + w4130;
  assign w167984 = w10499 << 4;
  assign w163853 = w167984 - w4131;
  assign w7680 = w15 << 9;
  assign w7665 = w7680 - w15;
  assign w1962240 = w7665 << 8;
  assign w384765 = w1962240 - w1577475;
  assign w196800 = w3075 << 6;
  assign w194735 = w196800 - w2065;
  assign w389470 = w194735 << 1;
  assign w378971 = w389470 - w10499;
  assign w532614 = w266307 << 1;
  assign w933920 = w29185 << 5;
  assign w655412 = w163853 << 2;
  assign w699050 = w349525 << 1;
  assign w757942 = w378971 << 1;
  assign w769530 = w384765 << 1;
  assign w946142 = w473071 << 1;

  assign Y[0] = w532614;
  assign Y[1] = w933920;
  assign Y[2] = w655412;
  assign Y[3] = w83977;
  assign Y[4] = w699050;
  assign Y[5] = w757942;
  assign Y[6] = w585283;
  assign Y[7] = w539791;
  assign Y[8] = w1040887;
  assign Y[9] = w997309;
  assign Y[10] = w769530;
  assign Y[11] = w946142;

endmodule //multiplier_block
